name: CI Pipeline

on:
  push:
    branches:
      - main  
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout do código
      - name: Checkout code
        uses: actions/checkout@v2

      # Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      # Build da imagem Docker
      - name: Build Docker image
        run: docker build -t arielmota/sgeven:v1 .

      # Push da imagem para o Docker Hub
      - name: Push Docker image
        run: docker push arielmota/sgeven:v1

      # Configurar a chave SSH para o deploy
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github_hostinger  # Coloca a chave privada do segredo
          chmod 600 ~/.ssh/github_hostinger  # Permissões corretas para a chave privada
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts  # Adiciona o host ao known_hosts

      # (Opcional) Deploy da aplicação
      - name: Deploy application
        run: |
          ssh -i ~/.ssh/github_hostinger root@${{ secrets.SSH_HOST }} "
          # Entrar no diretório do projeto
          cd /var/www/sgeven && \
          
          # Atualizar o repositório com a versão mais recente do Git
          git stash && \
          git pull --rebase && \
            
          # Puxar a última versão da imagem Docker
          docker pull arielmota/sgeven:v1 && \
            
          # Parar e remover os containers antigos
          docker-compose down && \
            
          # Levantar os containers novamente, forçando a recriação
          docker-compose up -d --build && \

          #Limpar imagens não utilizadas para liberar espaço
          docker image prune
          "
